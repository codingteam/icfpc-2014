(define (main state reserved)
    (define (elt2 lst coords)
      (elt (elt lst (car coords)) (cdr coords))
    )
    (define (is-wall grid coords)
      (= 0 (elt2 grid coords))
    )
    (define (vitality man) (car man))
    (define (location man) (elt man 1))
    (define (direction man) (elt man 2))
    (define (at-left coords)
      (pair (cdr coords)
            (- (car coords) 1)
      )
    )
    (define (at-right coords)
      (pair (cdr coords)
            (+ 1 (car coords))
      )
    )
    (define (at-up coords)
      (pair (- (cdr coords) 1)
            (car coords)
      )
    )
    (define (at-down coords)
      (pair (+ (cdr coords) 1)
            (car coords)
      )
    )
    (define (in-direction dir coords)
      (if (= dir 0)
        ((at-up coords))
        ((if (= dir 1)
           ((at-right coords))
           ((if (= dir 2)
              ((at-down coords))
              ((at-left coords))
            )
          )
         )
       )
      )
    )
    (define (rotate-clockwise dir)
      (if (= dir 3)
        (0)
        ((+ dir 1))
      )
    )
    (define (step ai-state world-state)
      (let (grid (car world-state)
            man  (elt world-state 1))
          (let (loc (location man)
                dir (direction man))
            (dbug (is-wall grid (in-direction dir loc)))
            (if (is-wall grid (in-direction dir loc))
              ((pair ai-state (rotate-clockwise dir)))
              ((pair ai-state dir))
            )
        )
      )
    )
    (pair 0 step))
